// Code generated by mockery v2.33.1. DO NOT EDIT.

package src

import mock "github.com/stretchr/testify/mock"

// MockPerson is an autogenerated mock type for the Person type
type MockPerson struct {
	mock.Mock
}

// Aging provides a mock function with given fields:
func (_m *MockPerson) Aging() {
	_m.Called()
}

// SayHello provides a mock function with given fields:
func (_m *MockPerson) SayHello() {
	_m.Called()
}

// SetName provides a mock function with given fields: name
func (_m *MockPerson) SetName(name string) {
	_m.Called(name)
}

// String provides a mock function with given fields:
func (_m *MockPerson) String() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewMockPerson creates a new instance of MockPerson. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPerson(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPerson {
	mock := &MockPerson{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
